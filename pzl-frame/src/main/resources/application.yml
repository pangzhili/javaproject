# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8080

spring:
  application:
    name: backend-poi

  #mysql
  datasource:
    url: jdbc:mysql://${Global.config.ip}:3307/collection?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver

    #指定数据源是druid
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
    filters:
      commons-log.connection-logger-name: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

  #activemq
  activemq:
    broker-url: "tcp://${Global.config.ip}:61616"
    user: admin
    password: admin

  #redis
  redis:
    host: "${Global.config.ip}"
    port: 6379
#        cluster:
#          nodes: ${Global.config.ip}:7001,${Global.config.ip}:7001,${Global.config.ip}:7001
    pool:
      max-active: 100
      max-wait: -1
      max-idle: 10
      min-idle: 0
    timeout: 0
    enableTransactionSupport: false
    #redis password 密码
    #password: 123456

   # jackson时间格式化
  jackson:
    joda-date-time-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

management:
  security:
    enabled: false

#mybatis 配置
mybatis:
  #config-location: classpath:mybatis/mybatis-config.xml   #指定全局配置文件的位置
  mapper-locations: classpath:mybatis/mapper/*.xml        #指定sql映射文件的位置
  configuration:
    map-underscore-to-camel-case: true #映射下划线到驼峰命名规则

# 配置日志
logging:
  pattern:
    console: "backend-poi-service-dev %date{yyyy-MM-dd HH:mm:ss.SSS,GMT+8} %level [%thread] %logger{10} [%file:%line] tradeId- %X{X-B3-TraceId:-} span- %X{X-B3-SpanId:-}- %msg%n"
  #debug 级别，默认info
  level:
    com:
      pzl: info

#elasticsearch config
elasticsearch:
  schema: http
  address: ${Global.config.ip}:9200
  connectTimeout: 5000
  socketTimeout: 5000
  connectionRequestTimeout: 5000
  maxConnectNum: 100
  maxConnectPerRoute: 100

#threadpool config
thread:
  pool:
    corePoolSize: 100
    maximumPoolSize: 200
    keepAliveTime: 3000
    queueCapacity: 100

#restTemplate config
rest:
  template:
    maxTotal: 200
    defaultMaxPerRoute: 100
    socketTimeout: 100000
    connectTimeout: 10000
    connectionRequestTimeout: 8000

#Global config
Global:
  config:
    ip: "www.pzl.com"
    httpIp: "http://${Global.config.ip}"

mysql:
  db1:
    url: jdbc:mysql://${Global.config.ip}:3307/collection?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    driverClassName: com.mysql.jdbc.Driver
    #指定数据源是druid
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
  db2:
    url: jdbc:mysql://${Global.config.ip}:3307/collection?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    driverClassName: com.mysql.jdbc.Driver
    #指定数据源是druid
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
